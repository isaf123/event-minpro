generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Sample {
  id        Int      @id @default(autoincrement())
  name      String
  code      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("samples")
  @@ignore
}

model Users {
  id            Int             @id @default(autoincrement())
  avatar_users  String?
  name          String          @unique
  email         String          @unique
  password      String
  referral_code String
  role          Role
  tryLogin      Int             @default(0)
  isActive      Boolean         @default(true)
  createdAt     DateTime        @default(now())
  updatedAt     DateTime        @updatedAt
  otp           String?
  token         String?         @unique
  ReferredBy    Referral?       @relation("ParentUserReferral")
  Referrals     Referral?       @relation("ReferralToUser")
  reviews_event reviews_event[]
  transactions  Transaction[]
  vouchers      Voucher[]

  @@map("users")
}

model Referral {
  id             Int       @id @default(autoincrement())
  referral_code  String
  user_id        Int       @unique
  parent_user_id Int       @unique
  createdAt      DateTime  @default(now())
  expiredAt      DateTime?
  parent_user    Users     @relation("ParentUserReferral", fields: [parent_user_id], references: [id])
  user           Users     @relation("ReferralToUser", fields: [user_id], references: [id])

  @@map("referral")
}

model MasterEvent {
  id             Int             @id @default(autoincrement())
  user_id        Int
  flyer_event    String
  title          String
  start_date     DateTime
  end_date       DateTime
  location_id    Int
  description    String?
  available_seat Int
  event_type     EventType
  category_id    Int
  price          Int
  category       CategoryEvent   @relation(fields: [category_id], references: [id])
  location       MasterLocation  @relation(fields: [location_id], references: [id])
  reviews_event  reviews_event[]
  transactions   Transaction[]
  Vouchers       Voucher[]

  @@index([category_id], map: "master_event_category_id_fkey")
  @@index([location_id], map: "master_event_location_id_fkey")
  @@map("master_event")
}

model CategoryEvent {
  id    Int           @id @default(autoincrement())
  title String
  event MasterEvent[]

  @@map("category_event")
}

model Transaction {
  id                 Int               @id @default(autoincrement())
  date_transaction   DateTime
  invoice_code       String
  user_id            Int
  event_id           Int
  total_price        Int
  status_transaction TransactionStatus
  voucherId          Int?
  event              MasterEvent       @relation(fields: [event_id], references: [id])
  user               Users             @relation(fields: [user_id], references: [id])
  voucher            Voucher?          @relation(fields: [voucherId], references: [id])

  @@index([event_id], map: "transaction_event_id_fkey")
  @@index([user_id], map: "transaction_user_id_fkey")
  @@index([voucherId], map: "transaction_voucherId_fkey")
  @@map("transaction")
}

model Voucher {
  id           Int           @id @default(autoincrement())
  name_voucher String
  discount     Float
  start_date   DateTime
  end_date     DateTime
  event_id     Int?
  user_id      Int
  Transaction  Transaction[]
  event        MasterEvent?  @relation(fields: [event_id], references: [id])
  user         Users         @relation(fields: [user_id], references: [id])

  @@index([event_id], map: "voucher_event_id_fkey")
  @@index([user_id], map: "voucher_user_id_fkey")
  @@map("voucher")
}

model MasterLocation {
  id          Int           @id @default(autoincrement())
  location    String
  MasterEvent MasterEvent[]

  @@map("master_location")
}

model reviews_event {
  id           Int         @id @default(autoincrement())
  review       String
  rating       Float
  event_id     Int
  user_id      Int
  master_event MasterEvent @relation(fields: [event_id], references: [id], map: "Reviews_Event_event_id_fkey")
  users        Users       @relation(fields: [user_id], references: [id], map: "Reviews_Event_user_id_fkey")

  @@index([event_id], map: "Reviews_Event_event_id_fkey")
  @@index([user_id], map: "Reviews_Event_user_id_fkey")
}

enum Role {
  eo
  customers
}

enum EventType {
  free
  paid
}

enum TransactionStatus {
  submitted
  pending
  paid
}
